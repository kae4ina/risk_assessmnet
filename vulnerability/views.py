from django.shortcuts import render, redirect

# views.py



from django.shortcuts import render, redirect

from assets.models import Asset
from company.models import CompanyUser
from .models import DefaultVulnerability, UserVulnerability
from .forms import UserVulnerabilityForm

# views.py




def vulnerability_create_view(request):
    # Получаем все уязвимости
    default_vulnerabilities = DefaultVulnerability.objects.all()
    user_vulnerabilities = UserVulnerability.objects.all()

    # Получаем активы для компаний, к которым принадлежит текущий пользователь
    company_users = CompanyUser.objects.filter(user=request.user)
    company_ids = company_users.values_list('company_id', flat=True)
    assets = Asset.objects.filter(company__in=company_ids)

    # Обработка формы для добавления UserVulnerability
    if request.method == 'POST':
        form = UserVulnerabilityForm(request.POST)
        if form.is_valid():
            user_vulnerability = form.save(commit=False)
            user_vulnerability.related_asset = form.cleaned_data['related_asset']  # Получаем актив из формы
            user_vulnerability.save()
            return redirect('vulnerability_saved')
    else:
        form = UserVulnerabilityForm()

    # Обновляем queryset формы, чтобы включить только активы, принадлежащие компании
    form.fields['related_asset'].queryset = assets

    context = {
        'default_vulnerabilities': default_vulnerabilities,
        'user_vulnerabilities': user_vulnerabilities,
        'form': form,
        'assets': assets,  # Передаем активы в контекст (можно не нужно, если уже в форме)
    }

    return render(request, 'vulnerability/vulnerability_create.html', context)


def vulnerability_saved(request):
    return render(request, 'vulnerability/vulnerability_saved.html')