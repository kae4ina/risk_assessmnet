from django import forms

from assets.models import Asset
from company.models import CompanyUser, Company
from vulnerability.models import DefaultVulnerability, UserVulnerability


class DefaultVulnerabilityForm(forms.ModelForm):
    class Meta:
        model=DefaultVulnerability
        fields=['name','related_asset_category']



class UserVulnerabilityForm(forms.ModelForm):
    company = forms.ModelChoiceField(queryset=CompanyUser .objects.none(), required=True)
    related_asset = forms.ModelChoiceField(queryset=Asset.objects.none(), required=True)

    class Meta:
        model = UserVulnerability
        fields = ['name', 'company','exploit_possibility', 'related_asset']
        labels={
            "name":"Название уязвимости",
            "company": "Компания",
            "exploit_possibility": "Вероятность эксплуатации",
            "related_asset": "Связанный актив"
        }

    def __init__(self, *args, **kwargs):
        super(UserVulnerabilityForm, self).__init__(*args, **kwargs)
        user = kwargs['initial'].get('user')
        if user:
            # Получаем queryset для поля company как объекты Company
            self.fields['company'].queryset = CompanyUser.objects.filter(user=user).select_related(
                'company').values_list('company', flat=True)

            # Теперь получаем реальные объекты Company
            self.fields['company'].queryset = Company.objects.filter(id__in=self.fields['company'].queryset)

            # Активы для поля related_asset, которые будут привязаны к создаваемой UserVulnerability
            self.fields['related_asset'].queryset = Asset.objects.filter(company__in=self.fields['company'].queryset)

